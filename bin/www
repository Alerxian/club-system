#!/usr/bin/env node

/**
 * Module dependencies
 */

var app = require('../app');
var debug = require('debug')('demo:server');
var http = require('http');

var port = normalizePort(process.env.PORT || '3000');
//app.set('port',port)

/**
 * 创建http服务
 */

var server = http.createServer(app.callback());

/**
 * Listen on provided port, on all network interfaces.
 */

server.listen(port, function() {
  console.log(`server is running at localhost:${process.env.PORT || port}`)
});
server.on('error', onError);
server.on('listening', onListening);

//格式化port
function normalizePort(val) {
  var port = parseInt(val, 10);

  if (isNaN(port)) {
    return val;
  }
  if (port >= 0) {
    return port;
  }

  return false;
}

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  var bind = typeof port === 'string' ? 'Pipe ' + port : 'Port ' + port;

  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

function onListening() {
  var addr = server.address();
  var bind = typeof addr === 'string' ? 'pipe ' + addr : 'port ' + addr.port;
  debug('Listening on ' + bind);
}